; Asm codes generated by Shanghai Haier C Compiler
; HRCO, Ver: 1.0,0137

#INCLUDE       	<ES7P0693.INC>
#INCLUDE       	<OPERATION.INC>
	PUBLIC         	_#T0
	EXTERN         	MUL_TEMP
	EXTERN         	MUL_TEMP
	PUBLIC         	_spi_init
	PUBLIC         	_hw2000b_write_reg
	PUBLIC         	_hw2000b_write_regDATA
	PUBLIC         	_hw2000b_read_reg
	PUBLIC         	_hw2000b_read_regDATA
	PUBLIC         	_hw2000b_write_fifo
	PUBLIC         	_hw2000b_write_fifoDATA
	PUBLIC         	_hw2000b_read_fifo
	PUBLIC         	_hw2000b_read_fifoDATA
	PUBLIC         	_val_h
	PUBLIC         	_val_l
_hw2000b_read_reg_#T20503_11	EQU            	_hw2000b_read_regDATA + 0X0		; Bank 0
_hw2000b_read_reg_#T20504_11	EQU            	_hw2000b_read_regDATA + 0X2		; Bank 0
_hw2000b_read_reg_#T20507_11	EQU            	_hw2000b_read_regDATA + 0X0		; Bank 0
_hw2000b_read_reg_#T20508_11	EQU            	_hw2000b_read_regDATA + 0X4		; Bank 0
_hw2000b_write_fifo_i_13	EQU            	_hw2000b_write_fifoDATA + 0X4		; Bank 0
_hw2000b_write_fifo_#T20549_13	EQU            	_hw2000b_write_fifoDATA + 0X6		; Bank 0
_hw2000b_write_fifo_#T20573_14	EQU            	_hw2000b_write_fifoDATA + 0X6		; Bank 0
#TMP	EQU            	?_TMP+ 0X1		; Bank 0
?_TMP_RET	EQU            	?_TMP		; Bank 0
_SPIEN_0#sh	EQU            	0X608		; Bank 0
_SPIRST_0#sh	EQU            	0X609		; Bank 0
_MS_0#sh	EQU            	0X60A		; Bank 0
_REN_0#sh	EQU            	0X60B		; Bank 0
_RBIE_0#sh	EQU            	0X611		; Bank 0
_TBIF_0#sh	EQU            	0X618		; Bank 0
_RBIF_0#sh	EQU            	0X619		; Bank 0
_IDIF_0#sh	EQU            	0X61C		; Bank 0
_SPICON0_0#sh	EQU            	0XC0		; Bank 0
_SPICON1_0#sh	EQU            	0XC1		; Bank 0
_SPIRBR_0#sh	EQU            	0XC4		; Bank 0
_SPITBW_0#sh	EQU            	0XC5		; Bank 0
_MULA_0#sh	EQU            	(MULA - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULB_0#sh	EQU            	(MULB - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULL_0#sh	EQU            	(MULL - 0X6080) % 0X40 + 0xC0		; Bank 0
_MULH_0#sh	EQU            	(MULH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEL_0#sh	EQU            	(DIVEL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEM_0#sh	EQU            	(DIVEM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSL_0#sh	EQU            	(DIVSL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVSH_0#sh	EQU            	(DIVSH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQL_0#sh	EQU            	(DIVQL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVQM_0#sh	EQU            	(DIVQM - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRL_0#sh	EQU            	(DIVRL - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVRH_0#sh	EQU            	(DIVRH - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVC_0#sh	EQU            	(DIVC - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEU_0#sh	EQU            	(DIVEU - 0X6080) % 0X40 + 0xC0		; Bank 0
_DIVEH_0#sh	EQU            	(DIVEH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAH_0#sh	EQU            	(FRAH - 0X6080) % 0X40 + 0xC0		; Bank 0
_FRAL_0#sh	EQU            	(FRAL - 0X6080) % 0X40 + 0xC0		; Bank 0
	_DESC          	spi_init,0X0,0X0
spi_init#	CSEG           
_spi_init
; /**************************************************************************
; * 版权声明：Copyright@2019 上海东软载波微电子有限公司
; * 文件名称：spi.c
; * 功能描述：spi通讯函数
; * 函数列表：spi_init			
; * 文件作者：Ljj  
; * 文件版本： 
; * 完成日期：2023-08-23	
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; #include <hic.h>
; #include "type.h"
; #include "spi.h"
; #define		CSN_0()		CSN = 0
; #define		CSN_1()		CSN = 1
; uint8_t		val_h, val_l;
; /**************************************************************************
; * 函数名称：spi_init
; * 功能描述：初始化spi
; * 输入参数：无
; * 返回参数：无
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; void spi_init(void)
; {
#line 33	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	TCSN = 0;
	CLR            	BKSR
;   33:(    ASGN_0,          0 ,            ,      PCT0)

; ITemplate_CLR_0_TMP
	BCC            	(_PCT0_0)/8,	(_PCT0_0)%8
#line 34	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	TSCK = 0;
;   34:(    ASGN_0,          0 ,            ,      PBT4)

; ITemplate_CLR_0_TMP
	BCC            	(_PBT4_0)/8,	(_PBT4_0)%8
#line 35	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	TMOSI = 0;
;   35:(    ASGN_0,          0 ,            ,      PBT5)

; ITemplate_CLR_0_TMP
	BCC            	(_PBT5_0)/8,	(_PBT5_0)%8
#line 36	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	TMISO = 1;
;   36:(    ASGN_0,          1 ,            ,      PBT6)

; ITemplate_SET_0_TMP
	BSS            	(_PBT6_0)/8,	(_PBT6_0)%8
#line 38	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN = 1;
;   38:(    ASGN_0,          1 ,            ,       PC0)

; ITemplate_SET_0_TMP
	BSS            	(_PC0_0)/8,	(_PC0_0)%8
#line 39	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SCK = 0;
;   39:(    ASGN_0,          0 ,            ,       PB4)

; ITemplate_CLR_0_TMP
	BCC            	(_PB4_0)/8,	(_PB4_0)%8
#line 40	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	MOSI = 0;
;   40:(    ASGN_0,          0 ,            ,       PB5)

; ITemplate_CLR_0_TMP
	BCC            	(_PB5_0)/8,	(_PB5_0)%8
#line 42	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPIRST = 1;			//复位SPI
;   42:(    ASGN_0,          1 ,            ,    SPIRST)

; ITemplate_SET_0_TMP
	BSS            	BKSR,	0x4
	BSS            	(_SPIRST_0#sh)/8,	(_SPIRST_0#sh)%8		; ShBank 1
#line 43	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     while(SPIRST);
;   43:(     LABEL,    #L20323 ,            ,          )

; ITemplate_LABEL
#L20323
;   43:(     JNZ_0,     SPIRST ,            ,   #L20323)

; ITemplate_JNZ_0
	JBC            	(_SPIRST_0#sh)/8,	(_SPIRST_0#sh)%8		; ShBank 1
	GOTO           	#L20323
#line 44	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     SPICON0 = 0xF0;     //CKS = Fosc/4 = 32/8 = 4MHz，清空发送器、接收器，字节读写 0xF0:Fosc/16 0xE0:Fosc/8 0xD0:Fosc/4 0xC0:Fosc/2
;   44:(    ASGN_1,        240 ,            ,   SPICON0)

; ITemplate_ASGN1_4_R
	MOVI           	0xf0
	MOVA           	_SPICON0_0#sh		; ShBank 1
#line 45	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     SPICON1 = 0x00;      //0:上升沿发送（先），下降沿接收（后）；
;   45:(    ASGN_1,          0 ,            ,   SPICON1)

; ITemplate_CLR1_4_TMP
	CLR            	_SPICON1_0#sh		; ShBank 1
#line 46	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     MS = 0;				//0：主机模式，1：从机模式
;   46:(    ASGN_0,          0 ,            ,        MS)

; ITemplate_CLR_0_TMP
	BCC            	(_MS_0#sh)/8,	(_MS_0#sh)%8		; ShBank 1
#line 47	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     RBIE = 0;			//关闭接收中断	
;   47:(    ASGN_0,          0 ,            ,      RBIE)

; ITemplate_CLR_0_TMP
	BCC            	(_RBIE_0#sh)/8,	(_RBIE_0#sh)%8		; ShBank 1
#line 48	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     SPIEN = 1;			//SPI使能
;   48:(    ASGN_0,          1 ,            ,     SPIEN)

; ITemplate_SET_0_TMP
	BSS            	(_SPIEN_0#sh)/8,	(_SPIEN_0#sh)%8		; ShBank 1
#line 49	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; }
;   49:(       RET,            ,            ,          )

; ITemplate_RET
	BCC            	BKSR,	0x4
	RET            			; Bank 0		; ShBank 0
	_DESC          	hw2000b_write_reg,0X3,0X0

SECTION1hw2000b_write_reg	UNINTIAL       	0		; Bank 0
	ORG            	0X8E		; Bank 0
_hw2000b_write_regDATA	RSEG           	0X3		; Bank 0
hw2000b_write_reg#	CSEG           
_hw2000b_write_reg
; /**************************************************************************
; * 函数名称：hw2000b_write_reg
; * 功能描述：写hw2000b寄存器
; * 输入参数：addr  寄存器地址
;             value 寄存器值
; * 返回参数：无
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; void hw2000b_write_reg(uint8_t addr, uint16_t data)
; {
#line 64	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	addr |= 0x80;
	CLR            	BKSR
;   64:(   ASGN_B$,          1 ,          7 ,      addr)

; ITemplate_SET_B1_TMP
	SECTION        	0x1
	BSS            	(_hw2000b_write_regDATA+0X0) & 0X7F,	0x7		; Bank 1
#line 65	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	REN = 0;        //关闭接收
;   65:(    ASGN_0,          0 ,            ,       REN)

; ITemplate_CLR_0_TMP
	BSS            	BKSR,	0x4
	BCC            	(_REN_0#sh)/8,	(_REN_0#sh)%8		; ShBank 1
#line 67	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN_0();
;   67:(    ASGN_0,          0 ,            ,       PC0)

; ITemplate_CLR_0_TMP
	BCC            	(_PC0_0)/8,	(_PC0_0)%8
#line 68	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = addr;
;   68:(    ASGN_1,       addr ,            ,    SPITBW)

; ITemplate_ASGN1_4_R
	MOV            	(_hw2000b_write_regDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 69	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     while(!TBIF);
;   69:(     LABEL,    #L20382 ,            ,          )

; ITemplate_LABEL
#L20382
;   69:(      JZ_0,       TBIF ,            ,   #L20382)

; ITemplate_JZ_0
	JBS            	(_TBIF_0#sh)/8,	(_TBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20382
#line 70	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = data>>8;
;   70:(    RSH_2U,       data ,          8 ,    SPITBW)

; ITemplate_RSH1_4U
	MOVI           	0x8
	ADDI           	0x1
	SECTION        	0x0
	MOVA           	(?_TMP) & 0X7F		; Bank 0
	MOVRA          	_hw2000b_write_regDATA+0X1		; Bank 1
	MOVA           	(?_TMP+0x1) & 0X7F		; Bank 0
	MOVRA          	_hw2000b_write_regDATA+0X1+0x1		; Bank 1
	MOVA           	(?_TMP+0x2) & 0X7F		; Bank 0
	MOV            	(?_TMP) & 0X7F,	0x0		; Bank 0
	GOTO           	#L20720
#L20721
	BCC            	PSW,	0x0
	RR             	(?_TMP+0x2) & 0X7F,	0x1		; Bank 0
	RR             	(?_TMP+0x1) & 0X7F,	0x1		; Bank 0
#L20720
	ADDI           	0xff
	JBS            	PSW,	0x2
	GOTO           	#L20721
	MOV            	(?_TMP+0x1) & 0X7F,	0x0		; Bank 0
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 71	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while(!TBIF);
;   71:(     LABEL,    #L20397 ,            ,          )

; ITemplate_LABEL
#L20397
;   71:(      JZ_0,       TBIF ,            ,   #L20397)

; ITemplate_JZ_0
	JBS            	(_TBIF_0#sh)/8,	(_TBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20397
#line 72	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = data;
;   72:(   CVUI_UC,       data ,            ,    SPITBW)

; ITemplate_CVSMT
	SECTION        	0x1
	MOV            	(_hw2000b_write_regDATA+0X1) & 0X7F,	0x0		; Bank 1
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 73	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while(!IDIF);
;   73:(     LABEL,    #L20408 ,            ,          )

; ITemplate_LABEL
#L20408
;   73:(      JZ_0,       IDIF ,            ,   #L20408)

; ITemplate_JZ_0
	JBS            	(_IDIF_0#sh)/8,	(_IDIF_0#sh)%8		; ShBank 1
	GOTO           	#L20408
#line 75	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN_1();
;   75:(    ASGN_0,          1 ,            ,       PC0)

; ITemplate_SET_0_TMP
	BSS            	(_PC0_0)/8,	(_PC0_0)%8
#line 76	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; }
;   76:(       RET,            ,            ,          )

; ITemplate_RET
	SECTION        	0x0
	BCC            	BKSR,	0x4
	RET            			; Bank 0		; ShBank 0
	_DESC          	hw2000b_read_reg,0X2,0X0

SECTION1hw2000b_read_reg	UNINTIAL       	0		; Bank 0
	ORG            	0X89		; Bank 0
_hw2000b_read_regDATA	RSEG           	0X6		; Bank 0
hw2000b_read_reg#	CSEG           
_hw2000b_read_reg
; /**************************************************************************
; * 函数名称：hw2000b_read_reg
; * 功能描述：读hw2000b寄存器
; * 输入参数：addr  寄存器地址
; * 返回参数：value 寄存器值
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; uint16_t hw2000b_read_reg(uint8_t addr)
; {
#line 90	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ;     CSN_0();
	CLR            	BKSR
;   90:(    ASGN_0,          0 ,            ,       PC0)

; ITemplate_CLR_0_TMP
	BCC            	(_PC0_0)/8,	(_PC0_0)%8
#line 91	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	REN = 1;        //打开接收
;   91:(    ASGN_0,          1 ,            ,       REN)

; ITemplate_SET_0_TMP
	BSS            	BKSR,	0x4
	BSS            	(_REN_0#sh)/8,	(_REN_0#sh)%8		; ShBank 1
#line 93	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = addr;
;   93:(    ASGN_1,       addr ,            ,    SPITBW)

; ITemplate_ASGN1_4_R
	SECTION        	0x1
	MOV            	(_hw2000b_read_regDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 94	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while (!RBIF);   //等待接收完成
;   94:(     LABEL,    #L20437 ,            ,          )

; ITemplate_LABEL
#L20437
;   94:(      JZ_0,       RBIF ,            ,   #L20437)

; ITemplate_JZ_0
	JBS            	(_RBIF_0#sh)/8,	(_RBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20437
#line 95	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	val_h = SPIRBR;  //读数据
;   95:(    ASGN_1,     SPIRBR ,            ,     val_h)

; ITemplate_ASGN1_4_R
	MOV            	_SPIRBR_0#sh,	0x0		; ShBank 1
	MOVA           	(_val_h) & 0X7F		; Bank 1
#line 97	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = 0xFF;
;   97:(    ASGN_1,        255 ,            ,    SPITBW)

; ITemplate_ASGN1_4_R
	MOVI           	0xff
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 98	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while (!RBIF);   //等待接收完成
;   98:(     LABEL,    #L20453 ,            ,          )

; ITemplate_LABEL
#L20453
;   98:(      JZ_0,       RBIF ,            ,   #L20453)

; ITemplate_JZ_0
	JBS            	(_RBIF_0#sh)/8,	(_RBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20453
#line 99	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	val_h = SPIRBR;  //读数据
;   99:(    ASGN_1,     SPIRBR ,            ,     val_h)

; ITemplate_ASGN1_4_R
	MOV            	_SPIRBR_0#sh,	0x0		; ShBank 1
	MOVA           	(_val_h) & 0X7F		; Bank 1
#line 101	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = 0xFF;
;  101:(    ASGN_1,        255 ,            ,    SPITBW)

; ITemplate_ASGN1_4_R
	MOVI           	0xff
	MOVA           	_SPITBW_0#sh		; ShBank 1
#line 102	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while (!RBIF);   //等待接收完成
;  102:(     LABEL,    #L20469 ,            ,          )

; ITemplate_LABEL
#L20469
;  102:(      JZ_0,       RBIF ,            ,   #L20469)

; ITemplate_JZ_0
	JBS            	(_RBIF_0#sh)/8,	(_RBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20469
#line 103	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	val_l = SPIRBR;  //读数据
;  103:(    ASGN_1,     SPIRBR ,            ,     val_l)

; ITemplate_ASGN1_4_R
	MOV            	_SPIRBR_0#sh,	0x0		; ShBank 1
	MOVA           	(_val_l) & 0X7F		; Bank 1
#line 105	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN_1();
;  105:(    ASGN_0,          1 ,            ,       PC0)

; ITemplate_SET_0_TMP
	BSS            	(_PC0_0)/8,	(_PC0_0)%8
#line 106	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	REN = 0;        //关闭接收
;  106:(    ASGN_0,          0 ,            ,       REN)

; ITemplate_CLR_0_TMP
	BCC            	(_REN_0#sh)/8,	(_REN_0#sh)%8		; ShBank 1
#line 108	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	return ((val_h <<8) + val_l);
;  108:(   CVUC_SI,      val_h ,            ,   #T20503)

; ITemplate_CVTMS_U
	CLR            	(_hw2000b_read_reg_#T20503_11+0x1) & 0X7F		; Bank 1
	MOV            	(_val_h) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_read_reg_#T20503_11) & 0X7F		; Bank 1
;  108:(    LSH_2S,    #T20503 ,          8 ,   #T20504)

; ITemplate_LSH1_4_8
	MOV            	(_hw2000b_read_reg_#T20503_11) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_read_reg_#T20504_11+0x1) & 0X7F		; Bank 1
	CLR            	(_hw2000b_read_reg_#T20504_11) & 0X7F		; Bank 1
;  108:(   CVUC_SI,      val_l ,            ,   #T20507)

; ITemplate_CVTMS_U
	CLR            	(_hw2000b_read_reg_#T20507_11+0x1) & 0X7F		; Bank 1
	MOV            	(_val_l) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_read_reg_#T20507_11) & 0X7F		; Bank 1
;  108:(     ADD_2,    #T20507 ,    #T20504 ,   #T20508)

; ITemplate_ADD1_4
	MOV            	(_hw2000b_read_reg_#T20507_11) & 0X7F,	0x0		; Bank 1
	ADD            	(_hw2000b_read_reg_#T20504_11) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_read_reg_#T20508_11) & 0X7F		; Bank 1
	MOV            	(_hw2000b_read_reg_#T20507_11+0x1) & 0X7F,	0x0		; Bank 1
	ADDC           	(_hw2000b_read_reg_#T20504_11+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_read_reg_#T20508_11+0x1) & 0X7F		; Bank 1
;  108:(     RET_2,    #T20508 ,            ,      #RET)

; ITemplate_RET2_N
	MOV            	(_hw2000b_read_reg_#T20508_11) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET		; Bank 0
	MOV            	(_hw2000b_read_reg_#T20508_11+0x1) & 0X7F,	0x0		; Bank 1
	MOVAR          	?_TMP_RET+0x1		; Bank 0
	MOVRA          	?_TMP_RET		; Bank 0
	SECTION        	0x0
	BCC            	BKSR,	0x4
	RET            			; Bank 0		; ShBank 0
	_DESC          	hw2000b_write_fifo,0X1,0X0

SECTION1hw2000b_write_fifo	UNINTIAL       	0		; Bank 0
	ORG            	0X89		; Bank 0
_hw2000b_write_fifoDATA	RSEG           	0X8		; Bank 0
hw2000b_write_fifo#	CSEG           
_hw2000b_write_fifo
; }
; /**************************************************************************
; * 函数名称：hw2000b_write_fifo
; * 功能描述：写hw2000b FIFO
; * 输入参数：addr   FIFO地址
;             data   数据地址
;             length 数据长度
; * 返回参数：无
; * 函数作者：
; * 完成日期：
; * 修订历史：
; * 修订日期：
; **************************************************************************/
; void hw2000b_write_fifo(uint8_t addr, uint8_t *data, uint8_t length)
; {
; 	uint16_t i;	
#line 126	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	addr |= 0x80;
	CLR            	BKSR
;  126:(   ASGN_B$,          1 ,          7 ,      addr)

; ITemplate_SET_B1_TMP
	SECTION        	0x1
	BSS            	(_hw2000b_write_fifoDATA+0X0) & 0X7F,	0x7		; Bank 1
#line 127	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	REN = 0;        //关闭接收
;  127:(    ASGN_0,          0 ,            ,       REN)

; ITemplate_CLR_0_TMP
	BSS            	BKSR,	0x4
	BCC            	(_REN_0#sh)/8,	(_REN_0#sh)%8		; ShBank 1
#line 129	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN_0();
;  129:(    ASGN_0,          0 ,            ,       PC0)

; ITemplate_CLR_0_TMP
	BCC            	(_PC0_0)/8,	(_PC0_0)%8
#line 130	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	SPITBW = addr;           //write addr
;  130:(    ASGN_1,       addr ,            ,    SPITBW)

; ITemplate_ASGN1_4_R
	MOV            	(_hw2000b_write_fifoDATA+0X0) & 0X7F,	0x0		; Bank 1
	MOVA           	_SPITBW_0#sh		; ShBank 1
; 	
#line 132	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	for (i = 0; i < length; i++) {
;  132:(    ASGN_2,          0 ,            ,         i)

; ITemplate_CLR1_4_TMP
	CLR            	(_hw2000b_write_fifo_i_13) & 0X7F		; Bank 1
	CLR            	(_hw2000b_write_fifo_i_13+0x1) & 0X7F		; Bank 1
;  132:(     LABEL,    #L20535 ,            ,          )

; ITemplate_LABEL
#L20535
;  132:(   CVUC_UI,     length ,            ,   #T20549)

; ITemplate_CVTMS_U
	CLR            	(_hw2000b_write_fifo_#T20549_13+0x1) & 0X7F		; Bank 1
	MOV            	(_hw2000b_write_fifoDATA+0X3) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_write_fifo_#T20549_13) & 0X7F		; Bank 1
;  132:(    JGE_2U,          i ,    #T20549 ,   #L20590)

; ITemplate_JGE1_4U
	MOV            	(_hw2000b_write_fifo_#T20549_13+0x1) & 0X7F,	0x0		; Bank 1
	SUB            	(_hw2000b_write_fifo_i_13+0x1) & 0X7F,	0x0		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20722
	MOV            	(_hw2000b_write_fifo_#T20549_13) & 0X7F,	0x0		; Bank 1
	SUB            	(_hw2000b_write_fifo_i_13) & 0X7F,	0x0		; Bank 1
#L20722
	JBC            	PSW,	0x0
	GOTO           	#L20590
#line 133	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 		while (!TBIF);       //waiting for spi txb empty
;  133:(     LABEL,    #L20552 ,            ,          )

; ITemplate_LABEL
#L20552
;  133:(      JZ_0,       TBIF ,            ,   #L20552)

; ITemplate_JZ_0
	JBS            	(_TBIF_0#sh)/8,	(_TBIF_0#sh)%8		; ShBank 1
	GOTO           	#L20552
#line 134	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 		SPITBW = data[i];    //write  data
;  134:(     ADD_2,       data ,          i ,   #T20573)

; ITemplate_ADD1_4
	MOV            	(_hw2000b_write_fifoDATA+0X1) & 0X7F,	0x0		; Bank 1
	ADD            	(_hw2000b_write_fifo_i_13) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_write_fifo_#T20573_14) & 0X7F		; Bank 1
	MOV            	(_hw2000b_write_fifoDATA+0X1+0x1) & 0X7F,	0x0		; Bank 1
	ADDC           	(_hw2000b_write_fifo_i_13+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	(_hw2000b_write_fifo_#T20573_14+0x1) & 0X7F		; Bank 1
;  134:(    ASGN_1,   *#T20573 ,            ,    SPITBW)

; ITemplate_GetRamRef
	MOV            	(_hw2000b_write_fifo_#T20573_14+0x1) & 0X7F,	0x0		; Bank 1
	MOVA           	IAAH
	MOV            	(_hw2000b_write_fifo_#T20573_14) & 0X7F,	0x0		; Bank 1
	MOVA           	IAAL
	MOV            	IAD,	0x0
	MOVAR          	?_TMP		; Bank 0
; ITemplate_ASGN1_4
	MOVRA          	?_TMP		; Bank 0
	MOVA           	_SPITBW_0#sh		; ShBank 1
;  132:(     ADD_2,          i ,          1 ,         i)

; ITemplate_INC_2_TMP
	INC            	(_hw2000b_write_fifo_i_13) & 0X7F		; Bank 1
	JBS            	PSW,	0x2
	GOTO           	#L20723
	INC            	(_hw2000b_write_fifo_i_13+0x1) & 0X7F		; Bank 1
#L20723
#line 135	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	}
;  135:(       JMP,            ,            ,   #L20535)

; ITemplate_JMP
	GOTO           	#L20535
#line 136	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	while (!IDIF);
;  136:(     LABEL,    #L20590 ,            ,          )

; ITemplate_LABEL
#L20590
;  136:(      JZ_0,       IDIF ,            ,   #L20590)

; ITemplate_JZ_0
	JBS            	(_IDIF_0#sh)/8,	(_IDIF_0#sh)%8		; ShBank 1
	GOTO           	#L20590
#line 138	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; 	CSN_1();
;  138:(    ASGN_0,          1 ,            ,       PC0)

; ITemplate_SET_0_TMP
	BSS            	(_PC0_0)/8,	(_PC0_0)%8
#line 139	D:\毕业论文\ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016\src\spi.c ; }
;  139:(       RET,            ,            ,          )

; ITemplate_RET
	SECTION        	0x0
	BCC            	BKSR,	0x4
	RET            			; Bank 0		; ShBank 0

SECTION0C__Program_Files__x86__HRCC_Tools_HRCC_v1_2_0_139_tools_INCLUDE_ES7P0693_h_STATIC38	UNINTIAL       		; Bank 0
_#T0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC39	PSECT	FLAG=0X1088,ADDR=0X7FD4C
_PB4_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC40	PSECT	FLAG=0X1088,ADDR=0X7FD4D
_PB5_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC41	PSECT	FLAG=0X1088,ADDR=0X7FD50
_PC0_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC42	PSECT	FLAG=0X1088,ADDR=0X7FD74
_PBT4_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC43	PSECT	FLAG=0X1088,ADDR=0X7FD75
_PBT5_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC44	PSECT	FLAG=0X1088,ADDR=0X7FD76
_PBT6_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC45	PSECT	FLAG=0X1088,ADDR=0X7FD78
_PCT0_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC46	PSECT	FLAG=0X1088,ADDR=0X30608
_SPIEN_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC47	PSECT	FLAG=0X1088,ADDR=0X30609
_SPIRST_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC48	PSECT	FLAG=0X1088,ADDR=0X3060A
_MS_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC49	PSECT	FLAG=0X1088,ADDR=0X3060B
_REN_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC50	PSECT	FLAG=0X1088,ADDR=0X30611
_RBIE_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC51	PSECT	FLAG=0X1088,ADDR=0X30618
_TBIF_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC52	PSECT	FLAG=0X1088,ADDR=0X30619
_RBIF_0	RSEG           	0X1		; Bank 0

SECTION8D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC53	PSECT	FLAG=0X1088,ADDR=0X3061C
_IDIF_0	RSEG           	0X1		; Bank 0

SECTION1D__毕业论文_ES_DEV_ES7W8020_SDK_ZJ_NODC_FB_V3_20231016_src_spi_c_STATIC	UNINTIAL       	0		; Bank 0
	ORG            	0X99		; Bank 0
_val_h	RSEG           	0X1		; Bank 0
	ORG            	0X9A		; Bank 0
_val_l	RSEG           	0X1		; Bank 0

SECTION8C__Program_Files__x86__HRCC_Tools_HRCC_v1_2_0_139_tools_INCLUDE_ES7P0693_h_STATIC	UNINTIAL       	0		; Bank 0
	ORG            	0X60C0		; Bank 0
_SPICON0_0	RSEG           	0X1		; Bank 0
	ORG            	0X60C1		; Bank 0
_SPICON1_0	RSEG           	0X1		; Bank 0
	ORG            	0X60C4		; Bank 0
_SPIRBR_0	RSEG           	0X1		; Bank 0
	ORG            	0X60C5		; Bank 0
_SPITBW_0	RSEG           	0X1		; Bank 0
	END
